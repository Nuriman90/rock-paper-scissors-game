[{"/home/nuriman/React Js/Github/rock-paper-scissors-game/src/index.js":"1","/home/nuriman/React Js/Github/rock-paper-scissors-game/src/App.js":"2","/home/nuriman/React Js/Github/rock-paper-scissors-game/src/reportWebVitals.js":"3"},{"size":535,"mtime":1666068718377,"results":"4","hashOfConfig":"5"},{"size":4418,"mtime":1666473512947,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1666068718390,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"iduomo",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/nuriman/React Js/Github/rock-paper-scissors-game/src/index.js",[],[],"/home/nuriman/React Js/Github/rock-paper-scissors-game/src/App.js",["18"],[],"import React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport scissor from '../src/assets/gunting.png';\nimport paper from '../src/assets/kertas.png';\nimport rock from '../src/assets/batu.png';\nimport logo from '../src/assets/logo.png';\nimport kembali from '../src/assets/refresh.png';\n\nfunction App() {\n  const [action, setAction] = useState('');\n  const [pscore, setPscore] = useState(0);\n  const [cscore, setCscore] = useState(0);\n  const [status, setStatus] = useState('');\n  const [comstyle, setComstyle] = useState('');\n\n  const rockIcon = \"rock\";\n  const paperIcon = \"paper\";\n  const scissorsIcon = \"scissors\";\n  const randomClasses = [rockIcon, paperIcon, scissorsIcon];\n  const randomNum = action && Math.floor(Math.random() * randomClasses.length);\n  const computerShowIcon = randomClasses[randomNum];\n\n  const clickStyle = () => {\n    setAction('');\n    setComstyle('');\n  }\n\n  const actionGame = () => {\n    if (action === 'rock' && computerShowIcon === scissorsIcon) {\n      setPscore(pscore + 1);\n      setStatus('PLAYER 1 WIN');\n      setComstyle(scissorsIcon);\n    } else if (action === 'rock' && computerShowIcon === paperIcon) {\n      setCscore(cscore + 1);\n      setStatus('COM WIN');\n      setComstyle(paperIcon);\n    } else if (action === 'paper' && computerShowIcon === scissorsIcon) {\n      setCscore(cscore + 1);\n      setStatus('COM WIN');\n      setComstyle(scissorsIcon);\n    } else if (action === 'paper' && computerShowIcon === rockIcon) {\n      setPscore(pscore + 1);\n      setStatus('PLAYER 1 WIN');\n      setComstyle(rockIcon);\n    } else if (action === 'scissors' && computerShowIcon === rockIcon) {\n      setCscore(cscore + 1);\n      setStatus('COM WIN');\n      setComstyle(rockIcon);\n    } else if (action === 'scissors' && computerShowIcon === paperIcon) {\n      setPscore(pscore + 1);\n      setStatus('PLAYER 1 WIN');\n      setComstyle(paperIcon);\n    } else if (action === computerShowIcon) {\n      setStatus('DRAW');\n      setComstyle(computerShowIcon);\n    } else {\n      setStatus('VS');\n    }\n  }\n\n  useEffect(() => {\n    actionGame();\n    if (parseInt(pscore) + parseInt(cscore) === 10) {\n      parseInt(pscore) > parseInt(cscore) ? alert(\"PLAYER WIN\") : alert(\"COM WIN\");\n      setPscore(0);\n      setCscore(0);\n      setStatus('VS');\n    }\n  }, [action])\n\n  return (\n    <div className=\"body\">\n      <header className=\"header\">\n        <div className=\"arrow-back\" onClick={() => window.location = \"/DetailGames\"}>\n          &lt;\n        </div>\n        <div className=\"brand\">\n          <img className=\"logoI\" src={logo} alt=\"logo\" />\n          <h1>ROCK PAPER SCISSORS</h1>\n        </div>\n      </header>\n      <section className=\"slide1\">\n        <div className=\"user-choice\">\n          <h1 className=\"player-name\">PLAYER 1</h1>\n          <h1>{pscore}</h1>\n          <div className=\"user\">\n            <button disabled={action} onClick={() => setAction('rock')} className={(action === 'rock') && 'activee'}>\n              <img className=\"rock\" src={rock} alt=\"batu\" />\n            </button>\n            <button disabled={action} onClick={() => setAction('paper')} className={(action === 'paper') && 'activee'}>\n              <img className=\"paper\" src={paper} alt=\"kertas\" />\n            </button>\n            <button disabled={action} onClick={() => setAction('scissors')} className={(action === 'scissors') && 'activee'}>\n              <img className=\"scissors\" src={scissor} alt=\"gunting\" />\n            </button>\n          </div>\n        </div>\n        <div className=\"vs\">\n          <h1 className={status !== 'VS' && 'action'}>{status}</h1>\n          <img onClick={() => clickStyle()} className=\"refresh\" src={kembali} alt=\"batu\" />\n        </div>\n        <div className=\"com-choice\">\n          <h1 className=\"player-com\">COM</h1>\n          <h1>{cscore}</h1>\n          <div className=\"com\">\n            <button className={(comstyle === rockIcon) && 'activee'}>\n              <img className=\"rock\" src={rock} alt=\"batu\" />\n            </button>\n            <button className={(comstyle === paperIcon) && 'activee'}>\n              <img className=\"paper\" src={paper} alt=\"kertas\" />\n            </button>\n            <button className={(comstyle === scissorsIcon) && 'activee'}>\n              <img class=\"scissors\" src={scissor} alt=\"gunting\" />\n            </button>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","/home/nuriman/React Js/Github/rock-paper-scissors-game/src/reportWebVitals.js",[],[],{"ruleId":"19","severity":1,"message":"20","line":69,"column":6,"nodeType":"21","endLine":69,"endColumn":14,"suggestions":"22"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'actionGame', 'cscore', and 'pscore'. Either include them or remove the dependency array.","ArrayExpression",["23"],{"desc":"24","fix":"25"},"Update the dependencies array to be: [action, actionGame, cscore, pscore]",{"range":"26","text":"27"},[2305,2313],"[action, actionGame, cscore, pscore]"]